<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	version="3.1">

	<servlet>
		<servlet-name>springDispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!-- springmvc 配置文件路径 -->
			<param-value>classpath:springmvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springDispatcherServlet</servlet-name>
		<!-- / 表示应答所有请求 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 解决中文乱码问题，将参数编码为utf-8 -->
	<filter>
	   <filter-name>encodingFilter</filter-name>
	   <filter-class>
	       org.springframework.web.filter.CharacterEncodingFilter
	   </filter-class>
	   <init-param>
	       <param-name>encoding</param-name>
	       <param-value>UTF-8</param-value>
	   </init-param>
	   <init-param>
	       <param-name>forceEncoding</param-name>
	       <param-value>true</param-value>
	   </init-param>
	</filter>
	<filter-mapping>
	   <filter-name>encodingFilter</filter-name>
	   <url-pattern>/*</url-pattern>
	</filter-mapping>

	<!--映射POST请求为DELETE，PUT请求 -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 强制SSL配置，即普通的请求也会重定向为SSL请求 -->
<!--	<security-constraint>-->
<!--	   <web-resource-collection>-->
<!--	       <web-resource-name>SSL</web-resource-name>-->
<!--	       <url-pattern>/*</url-pattern> &lt;!&ndash; 全站使用SSL &ndash;&gt;-->
<!--	   </web-resource-collection>-->
<!--	   <user-data-constraint>-->
<!--	       <description>SSL required</description>-->
<!--	       &lt;!&ndash; CONFIDENTIAL: 要保证服务器和客户端之间传输的数据不能够被修改，且不能被第三方查看到 &ndash;&gt;-->
<!--	       &lt;!&ndash; INTEGRAL: 要保证服务器和client之间传输的数据不能够被修改 &ndash;&gt;-->
<!--	       &lt;!&ndash; NONE: 指示容器必须能够在任一的连接上提供数据。（即用HTTP或HTTPS，由客户端来决定） &ndash;&gt;-->
<!--	       <transport-guarantee>CONFIDENTIAL</transport-guarantee>-->
<!--	   </user-data-constraint>-->
<!--	</security-constraint>-->
	    
	<welcome-file-list>  
	    <welcome-file></welcome-file>  
	</welcome-file-list>  
</web-app>